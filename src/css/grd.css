/*
Since the css grid spec is not yet supported in all browsers we use this mixin to easily enable/disable it
http://caniuse.com/#search=css-grid%7Ccss-supports
@param {Boolean} $enabled
*/
/*
@param {String} $modifier [null]
*/
/*
@param {String} $type
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
@param {String} $margin
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $type [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {Number} $columns
*/
/*
Supported units and styles to support float bases lay-out styles
@param {String} $breakpoint
*/
/*
Mixin to create classes for spanning multiple rows
@param {String} $breakpoint
@param {Number} $span
*/
/*
Generate CSS grid based container layout
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/**
 * Sections
 */
[class*='grid-section'] > :last-child {
  margin-bottom: 0 !important;
}

[class*='grid-section'] > :last-child > :last-child {
  margin-bottom: 0 !important;
}

/**
 * Units
 */
[class*='grid-container'] [class*='--pull-'],
[class*='grid-container'] [class*='--push-'] {
  position: relative;
  clear: none;
}

@supports (display: grid) {
  [class*='grid-container'] [class*='--pull-'],
  [class*='grid-container'] [class*='--push-'] {
    position: static;
  }
}

[class*='grid-unit'] {
  float: left;
  width: 100%;
  min-height: 1px;
}

[class*='grid-unit'] > :last-child {
  margin-bottom: 0 !important;
}

/**
 * Containers
 */
[class*='grid-container']::before, [class*='grid-container']::after {
  content: ' ';
  display: table;
}

[class*='grid-container']::after {
  clear: both;
}

@supports (display: grid) {
  [class*='grid-container'] {
    display: grid;
    grid-auto-flow: row;
    grid-auto-columns: 1fr;
  }
  [class*='grid-container']::before, [class*='grid-container']::after {
    display: none;
  }
  [class*='grid-container'] > [class*='grid-unit'] {
    width: 100%;
  }
}

@supports (display: grid) {
  [class*='grid-container'] {
    grid-template-columns: repeat(12, 1fr);
  }
  @supports (grid-template-columns: minmax(0, 1.1rem)) {
    [class*='grid-container'] {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
  }
}

/**
 * Wrappers
 */
[class*='grid-wrapper--max-width-xs'] {
  max-width: 320px;
}

[class*='grid-wrapper--max-width-m'] {
  max-width: 668px;
}

[class*='grid-wrapper--max-width-l'] {
  max-width: 901px;
}

[class*='grid-wrapper--max-width-layout'] {
  max-width: 128rem;
}

[class*='grid-wrapper--max-width-text'] {
  max-width: 60rem;
}

[class*='grid-wrapper--centered'] {
  margin: 0 auto;
}

[class*='grid-wrapper--relative'] {
  position: relative;
  height: 100%;
}

[class*='grid-wrapper--app-padding'] {
  padding: 1.6rem 1rem;
}

[class*='grid-wrapper--sticky-footer'] {
  min-height: 100%;
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-columns: 100%;
}

[class*='grid-wrapper--sticky-footer--tpl'] {
  min-height: calc(100% - 200px);
}

[class*='grid-wrapper--login'] {
  max-width: 36.8rem;
}

[class*='grid-wrapper--overlapping-content'] {
  padding: 0 1.6rem;
}

[class*='grid-wrapper--finished-page'] {
  position: relative;
  background-color: #fff;
  max-width: 1024px;
  margin: 0 auto;
  padding-top: 1.6rem;
}

[class*='grid-wrapper--coolblue-energy-banner'] {
  max-width: 1024px;
  margin: 0 auto;
}

/**
 * $size - number in pixels, eg. 541px
 */
/**
 * $size - number in pixels, eg. 541px
 */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* The maximum size for the layout */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/*
Since the css grid spec is not yet supported in all browsers we use this mixin to easily enable/disable it
http://caniuse.com/#search=css-grid%7Ccss-supports
@param {Boolean} $enabled
*/
/*
@param {String} $modifier [null]
*/
/*
@param {String} $type
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
@param {String} $margin
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $type [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {Number} $columns
*/
/*
Supported units and styles to support float bases lay-out styles
@param {String} $breakpoint
*/
/*
Mixin to create classes for spanning multiple rows
@param {String} $breakpoint
@param {Number} $span
*/
/*
Generate CSS grid based container layout
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/**
 * Sections
 */
.grid-section-xs--gap-1:not(:first-child) {
  margin-top: 0.4rem;
}

.grid-section-xs--gap-2:not(:first-child) {
  margin-top: 0.8rem;
}

.grid-section-xs--gap-3:not(:first-child) {
  margin-top: 1.2rem;
}

.grid-section-xs--gap-4:not(:first-child) {
  margin-top: 1.6rem;
}

.grid-section-xs--gap-5:not(:first-child) {
  margin-top: 2rem;
}

.grid-section-xs--gap-6:not(:first-child) {
  margin-top: 2.4rem;
}

.grid-section-xs--gap-8:not(:first-child) {
  margin-top: 3.2rem;
}

.grid-section-xs--gap-10:not(:first-child) {
  margin-top: 4rem;
}

/**
 * Units
 */
[class*='grid-unit-xs'] {
  display: block;
  clear: none;
}

.grid-unit-xs--col-1 {
  width: 8.333333%;
}

@supports (display: grid) {
  .grid-unit-xs--col-1 {
    grid-column-end: span 1;
  }
}

.grid-unit-xs--col-2 {
  width: 16.666667%;
}

@supports (display: grid) {
  .grid-unit-xs--col-2 {
    grid-column-end: span 2;
  }
}

.grid-unit-xs--col-3 {
  width: 25%;
}

@supports (display: grid) {
  .grid-unit-xs--col-3 {
    grid-column-end: span 3;
  }
}

.grid-unit-xs--col-4 {
  width: 33.333333%;
}

@supports (display: grid) {
  .grid-unit-xs--col-4 {
    grid-column-end: span 4;
  }
}

.grid-unit-xs--col-5 {
  width: 41.666667%;
}

@supports (display: grid) {
  .grid-unit-xs--col-5 {
    grid-column-end: span 5;
  }
}

.grid-unit-xs--col-6 {
  width: 50%;
}

@supports (display: grid) {
  .grid-unit-xs--col-6 {
    grid-column-end: span 6;
  }
}

.grid-unit-xs--col-7 {
  width: 58.333333%;
}

@supports (display: grid) {
  .grid-unit-xs--col-7 {
    grid-column-end: span 7;
  }
}

.grid-unit-xs--col-8 {
  width: 66.666667%;
}

@supports (display: grid) {
  .grid-unit-xs--col-8 {
    grid-column-end: span 8;
  }
}

.grid-unit-xs--col-9 {
  width: 75%;
}

@supports (display: grid) {
  .grid-unit-xs--col-9 {
    grid-column-end: span 9;
  }
}

.grid-unit-xs--col-10 {
  width: 83.333333%;
}

@supports (display: grid) {
  .grid-unit-xs--col-10 {
    grid-column-end: span 10;
  }
}

.grid-unit-xs--col-11 {
  width: 91.666667%;
}

@supports (display: grid) {
  .grid-unit-xs--col-11 {
    grid-column-end: span 11;
  }
}

.grid-unit-xs--col-12 {
  width: 100%;
}

@supports (display: grid) {
  .grid-unit-xs--col-12 {
    grid-column-end: span 12;
  }
}

.grid-unit-xs--hidden {
  display: none;
}

.grid-unit-xs--pull-col-2 {
  left: -16.666667%;
}

@supports (display: grid) {
  .grid-unit-xs--pull-col-2 {
    grid-column-start: 1;
    grid-row-start: 1;
  }
}

.grid-unit-xs--push-col-2 {
  left: 16.666667%;
}

@supports (display: grid) {
  .grid-unit-xs--push-col-2 {
    grid-column-start: 3;
    grid-row-start: 1;
  }
}

.grid-unit-xs--pull-col-3 {
  left: -25%;
}

@supports (display: grid) {
  .grid-unit-xs--pull-col-3 {
    grid-column-start: 1;
    grid-row-start: 1;
  }
}

.grid-unit-xs--push-col-3 {
  left: 25%;
}

@supports (display: grid) {
  .grid-unit-xs--push-col-3 {
    grid-column-start: 4;
    grid-row-start: 1;
  }
}

@supports (display: grid) {
  .grid-unit-xs--valign-center {
    align-self: center;
  }
}

/**
 * Containers
 */
.grid-container-xs--gap-1--x {
  margin-right: -0.2rem;
  margin-left: -0.2rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-1--x {
    margin: 0;
    grid-column-gap: 0.4rem;
  }
}

.grid-container-xs--gap-1--x > [class*='grid-unit'] {
  padding: 0 0.2rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-1--x > [class*='grid-unit'] {
    padding: 0;
  }
}

.grid-container-xs--gap-2--x {
  margin-right: -0.4rem;
  margin-left: -0.4rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-2--x {
    margin: 0;
    grid-column-gap: 0.8rem;
  }
}

.grid-container-xs--gap-2--x > [class*='grid-unit'] {
  padding: 0 0.4rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-2--x > [class*='grid-unit'] {
    padding: 0;
  }
}

.grid-container-xs--gap-3--x {
  margin-right: -0.6rem;
  margin-left: -0.6rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-3--x {
    margin: 0;
    grid-column-gap: 1.2rem;
  }
}

.grid-container-xs--gap-3--x > [class*='grid-unit'] {
  padding: 0 0.6rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-3--x > [class*='grid-unit'] {
    padding: 0;
  }
}

.grid-container-xs--gap-4--x {
  margin-right: -0.8rem;
  margin-left: -0.8rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-4--x {
    margin: 0;
    grid-column-gap: 1.6rem;
  }
}

.grid-container-xs--gap-4--x > [class*='grid-unit'] {
  padding: 0 0.8rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-4--x > [class*='grid-unit'] {
    padding: 0;
  }
}

.grid-container-xs--gap-6--x {
  margin-right: -1.2rem;
  margin-left: -1.2rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-6--x {
    margin: 0;
    grid-column-gap: 2.4rem;
  }
}

.grid-container-xs--gap-6--x > [class*='grid-unit'] {
  padding: 0 1.2rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-6--x > [class*='grid-unit'] {
    padding: 0;
  }
}

.grid-container-xs--gap-8--x {
  margin-right: -1.6rem;
  margin-left: -1.6rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-8--x {
    margin: 0;
    grid-column-gap: 3.2rem;
  }
}

.grid-container-xs--gap-8--x > [class*='grid-unit'] {
  padding: 0 1.6rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-8--x > [class*='grid-unit'] {
    padding: 0;
  }
}

.grid-container-xs--gap-1--y {
  margin-top: -0.4rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-1--y {
    margin-top: 0;
    grid-row-gap: 0.4rem;
  }
}

.grid-container-xs--gap-1--y > [class*='grid-unit'] {
  margin-top: 0.4rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-1--y > [class*='grid-unit'] {
    margin-top: 0;
  }
}

.grid-container-xs--gap-2--y {
  margin-top: -0.8rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-2--y {
    margin-top: 0;
    grid-row-gap: 0.8rem;
  }
}

.grid-container-xs--gap-2--y > [class*='grid-unit'] {
  margin-top: 0.8rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-2--y > [class*='grid-unit'] {
    margin-top: 0;
  }
}

.grid-container-xs--gap-3--y {
  margin-top: -1.2rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-3--y {
    margin-top: 0;
    grid-row-gap: 1.2rem;
  }
}

.grid-container-xs--gap-3--y > [class*='grid-unit'] {
  margin-top: 1.2rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-3--y > [class*='grid-unit'] {
    margin-top: 0;
  }
}

.grid-container-xs--gap-4--y {
  margin-top: -1.6rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-4--y {
    margin-top: 0;
    grid-row-gap: 1.6rem;
  }
}

.grid-container-xs--gap-4--y > [class*='grid-unit'] {
  margin-top: 1.6rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-4--y > [class*='grid-unit'] {
    margin-top: 0;
  }
}

.grid-container-xs--gap-5--y {
  margin-top: -2rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-5--y {
    margin-top: 0;
    grid-row-gap: 2rem;
  }
}

.grid-container-xs--gap-5--y > [class*='grid-unit'] {
  margin-top: 2rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-5--y > [class*='grid-unit'] {
    margin-top: 0;
  }
}

.grid-container-xs--gap-6--y {
  margin-top: -2.4rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-6--y {
    margin-top: 0;
    grid-row-gap: 2.4rem;
  }
}

.grid-container-xs--gap-6--y > [class*='grid-unit'] {
  margin-top: 2.4rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-6--y > [class*='grid-unit'] {
    margin-top: 0;
  }
}

.grid-container-xs--gap-7--y {
  margin-top: -2.8rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-7--y {
    margin-top: 0;
    grid-row-gap: 2.8rem;
  }
}

.grid-container-xs--gap-7--y > [class*='grid-unit'] {
  margin-top: 2.8rem;
}

@supports (display: grid) {
  .grid-container-xs--gap-7--y > [class*='grid-unit'] {
    margin-top: 0;
  }
}

@supports (display: grid) {
  /* Needed for e.g. list-items and bullets */
  [class*='grid-container-xs--inline'] {
    display: inline-grid;
    width: 100%;
  }
  @supports (display: grid) {
    [class*='grid-container-xs--vertical-centered'] {
      align-items: center;
    }
  }
}

/**
 * Wrappers
 */
[class*='grid-wrapper-xs--inverted-margin'] {
  margin: 0 -1.2rem;
}

/* Used inside boxed with a gap-4 padding */
[class*='grid-wrapper-xs--inverted-margin-s'] {
  margin: 0 -1.6rem;
}

/* Used inside boxed with a gap-5 padding */
[class*='grid-wrapper-xs--inverted-margin-m'] {
  margin: 0 -2rem;
}

[class*='grid-wrapper-xs--inverted-panel-padding'] {
  margin: 0 -1.2rem;
}

[class*='grid-wrapper-xs--padding'] {
  padding: 0 1.2rem;
}

[class*='grid-wrapper-xs--gap-4'] {
  padding: 0 1.6rem;
}

[class*='grid-wrapper-xs--gap-3'] {
  padding: 0 1.2rem;
}

[class*='grid-wrapper-xs--padding-bottom-4'] {
  padding: 0 0 1.6rem 0;
}

[class*='grid-wrapper-xs--layout-wrapper'] {
  max-width: 128rem;
  margin: 0 auto;
}

[class*='grid-wrapper-xs--checkout'] {
  max-width: 75.2rem;
}

[class*='grid-wrapper-xs--checkout-wide'] {
  max-width: 88rem;
}

[class*='grid-wrapper-xs--app-checkout-padding'] {
  padding: 1.2rem 1.2rem 1.6rem 1.2rem;
}

/* Custom wrappers for Coolblue energy landing-page */
[class*='grid-wrapper-xs--energy'] {
  padding: 0.8rem 1.6rem 2.4rem 1.6rem;
}

/**
 * $size - number in pixels, eg. 541px
 */
/**
 * $size - number in pixels, eg. 541px
 */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* The maximum size for the layout */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/*
Since the css grid spec is not yet supported in all browsers we use this mixin to easily enable/disable it
http://caniuse.com/#search=css-grid%7Ccss-supports
@param {Boolean} $enabled
*/
/*
@param {String} $modifier [null]
*/
/*
@param {String} $type
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
@param {String} $margin
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $type [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {Number} $columns
*/
/*
Supported units and styles to support float bases lay-out styles
@param {String} $breakpoint
*/
/*
Mixin to create classes for spanning multiple rows
@param {String} $breakpoint
@param {Number} $span
*/
/*
Generate CSS grid based container layout
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/

/**
 * $size - number in pixels, eg. 541px
 */
/**
 * $size - number in pixels, eg. 541px
 */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* The maximum size for the layout */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/*
Since the css grid spec is not yet supported in all browsers we use this mixin to easily enable/disable it
http://caniuse.com/#search=css-grid%7Ccss-supports
@param {Boolean} $enabled
*/
/*
@param {String} $modifier [null]
*/
/*
@param {String} $type
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
@param {String} $margin
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $type [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {Number} $columns
*/
/*
Supported units and styles to support float bases lay-out styles
@param {String} $breakpoint
*/
/*
Mixin to create classes for spanning multiple rows
@param {String} $breakpoint
@param {Number} $span
*/
/*
Generate CSS grid based container layout
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/

/**
 * $size - number in pixels, eg. 541px
 */
/**
 * $size - number in pixels, eg. 541px
 */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* The maximum size for the layout */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/*
Since the css grid spec is not yet supported in all browsers we use this mixin to easily enable/disable it
http://caniuse.com/#search=css-grid%7Ccss-supports
@param {Boolean} $enabled
*/
/*
@param {String} $modifier [null]
*/
/*
@param {String} $type
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
@param {String} $margin
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $type [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {Number} $columns
*/
/*
Supported units and styles to support float bases lay-out styles
@param {String} $breakpoint
*/
/*
Mixin to create classes for spanning multiple rows
@param {String} $breakpoint
@param {Number} $span
*/
/*
Generate CSS grid based container layout
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/

/**
 * $size - number in pixels, eg. 541px
 */
/**
 * $size - number in pixels, eg. 541px
 */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* The maximum size for the layout */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/*
Since the css grid spec is not yet supported in all browsers we use this mixin to easily enable/disable it
http://caniuse.com/#search=css-grid%7Ccss-supports
@param {Boolean} $enabled
*/
/*
@param {String} $modifier [null]
*/
/*
@param {String} $type
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
@param {String} $margin
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $type [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {Number} $columns
*/
/*
Supported units and styles to support float bases lay-out styles
@param {String} $breakpoint
*/
/*
Mixin to create classes for spanning multiple rows
@param {String} $breakpoint
@param {Number} $span
*/
/*
Generate CSS grid based container layout
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/

/**
 * $size - number in pixels, eg. 541px
 */
/**
 * $size - number in pixels, eg. 541px
 */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* The maximum size for the layout */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/*
Since the css grid spec is not yet supported in all browsers we use this mixin to easily enable/disable it
http://caniuse.com/#search=css-grid%7Ccss-supports
@param {Boolean} $enabled
*/
/*
@param {String} $modifier [null]
*/
/*
@param {String} $type
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
@param {String} $margin
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $type [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint [null]
@param {String} $modifier [null]
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
@param {String} $gap
@param {String} $modifier
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
@param {Number} $columns
*/
/*
Supported units and styles to support float bases lay-out styles
@param {String} $breakpoint
*/
/*
Mixin to create classes for spanning multiple rows
@param {String} $breakpoint
@param {Number} $span
*/
/*
Generate CSS grid based container layout
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/
/*
@param {String} $breakpoint
*/

/**
 * $size - number in pixels, eg. 541px
 */
/**
 * $size - number in pixels, eg. 541px
 */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/* The maximum size for the layout */
/* Do not use the $size-x variables directly in partials, use to create specific variables instead */
/* Use for paddings and margins */
/* Use for widths on elements */
/* Use for (min-)heights on elements */
/**
@param {String} $property [null]
@param {String} $value [null]
 */
